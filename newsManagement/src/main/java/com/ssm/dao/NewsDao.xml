<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.NewsDao">
<!--    sql段落公用避免重复，只有where、if内的条件成立才会拼接-->
    <sql id="selectNewsListWhere">
        <where>
            n.categoryId=c.categoryId
            <if test="keywords != null and keywords != ''">
                and (n.title like CONCAT('%',#{keywords},'%'))
            </if>
            <if test="newsListCategoryId != null and newsListCategoryId != ''">
                and (n.categoryId = #{newsListCategoryId})
            </if>
        </where>
    </sql>

    <select id="findNewsList" parameterType="String" resultType="News">
        select n.*, c.categoryName from t_news as n, t_category as c
        <include refid="selectNewsListWhere" />
            order by publishTime desc
            limit #{startRows}, #{pageSize}
    </select>

    <sql id="getNewsListWhere">
        <where>
            <if test="keywords != null and keywords != ''">
                and (n.title like CONCAT('%',#{keywords},'%'))
                or (n.keywords like CONCAT('%',#{keywords},'%'))
            </if>
            <if test="newsListCategoryId != null and newsListCategoryId != ''">
                and (n.categoryId = #{newsListCategoryId})
            </if>
        </where>
    </sql>

    <select id="getNewsCount" parameterType="String" resultType="Integer">
        select count(*) from t_news as n
        <include refid="getNewsListWhere" />
    </select>

    <select id="getNewsByNewsId" parameterType="Integer" resultType="News">
        select * from t_news as n, t_category as c where newsId = #{newsId} adn n.categoryId = c.categoryId
    </select>

    <insert id="addNews" parameterType="News">
		insert into t_news(
			title,
			contentTitle,
			content,
			contentAbstract,
			keywords,
			author,
			publishTime,
			publishStatus,
			categoryId
		)
		values(
			#{title},
			#{contentTitle},
			#{content},
			#{contentAbstract},
			#{keywords},
			#{author},
			#{publishTime},
			#{publishStatus},
			#{categoryId}
		)
	</insert>

    <update id="editNews" parameterType="News">
        update t_news
        <set>
            publishTime=#{publishTime},
            publishStatus=#{publishStatus},
            title=#{title},
            contentTitle=#{contentTitle},
            content=#{content},
            contentAbstract=#{contentAbstract},
            keywords=#{keywords},
            author=#{author},
            categoryId=#{categoryId}
        </set>
        where newsId=#{newsId}
    </update>
    <!--设置新闻发布状态  status 1:已发布；2：被撤稿-->
    <update id="setNewsPublishStatus" parameterType="News">
		update t_news set publishStatus=#{publishStatus} where newsId=#{newsId}
	</update>
    <!--删除新闻 -->
    <delete id="delNews" parameterType="Integer">
		delete from t_news where newsId=#{newsId}
	</delete>

</mapper>