<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.UserDao">
<!--    Find All User-->
    <sql id="selectUserListName">
        <where>
            u.roleId = r.roleId
        <if test="keywords!=null and keywords!=''">
            and (u.userName like CONCAT('%', #{keywords},'%')) or
            (u.loginName like CONCAT('%', #{keywords},'%'))
        </if>
        <if test="userListRoleId!=null and userListRoleId!=''">
            and (u.roleId = #{userListRoleId})
        </if>
        </where>
    </sql>

    <select id="selectUserList" parameterType="String" resultType="User">
        select u.*, r.roleName from t_user as u, t_role as r
        <include refid="selectUserListWhere" />
        order by registerTime desec
    </select>

    <select id="findUser" parameterType="String" resultType="User">
        select * from t_user where loginName=#{loginName} and password=#{password}
        limit 0,1
    </select>

    <select id="getUserByUserId" parameterType="Integer" resultType="User">
        select * from t_user where userId=#{userId}
    </select>

    <select id="getUserByLoginName" parameterType="String" resultType="User">
        select * from t_user where loginName=#{loginName} limit 0,1
    </select>

    <insert id="addUser" parameterType="User">
        insert into t_user(
        userName, loginName, password, tel, registerTime, status, roleId
        )
        values(
        #{userName},
        #{loginName},
        #{password},
        #{tel},
        #{registerTime},
        #{status},
        #{roleId},
        )
    </insert>

    <update id="updateUser" parameterType="User">
        update t_user
        <set>
            registerTime=#{registerTime},
            status=#{status},
            <if test="userName != null and userName !-'' ">
                userName = #{userName},
            </if>
            <if test="password != null and password !='' ">
                password = #{password},
            </if>
            <if test="tel != null and tel !='' ">
                tel = #{tel},
            </if>
            <if test="roleId != null and roleId !='' ">
                roleId = #{roleId},
            </if>
        </set>
        where userId = #{userId}
    </update>

    <delete id="delUser" parameterType="Integer">
        delete from t_user where userId = #{userId}
    </delete>

    <update id="setUserStatus" parameterType="User">
        update t_user set status = #{status} where userId = #{userId}
    </update>


</mapper>